name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_ENV: production
  BASE_URL: /

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Debug Environment
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Package.json contents:"
          cat package.json
      
      - name: Clean Environment
        run: |
          echo "Cleaning node_modules and package-lock.json"
          rm -rf node_modules package-lock.json
          
      - name: Install Dependencies
        run: |
          # Create complete package.json with all dependencies
          echo "Creating complete package.json..."
          echo '{
            "name": "hessam_portfolio",
            "version": "1.0.0",
            "private": true,
            "type": "module",
            "scripts": {
              "dev": "vite",
              "build": "tsc && vite build",
              "preview": "vite preview"
            },
            "dependencies": {
              "react": "18.2.0",
              "react-dom": "18.2.0"
            },
            "devDependencies": {
              "typescript": "5.1.6",
              "vite": "4.4.7",
              "@vitejs/plugin-react": "4.0.3",
              "@types/react": "18.2.15",
              "@types/react-dom": "18.2.7"
            }
          }' > package.json
          
          # Create tsconfig.json
          echo "Creating tsconfig.json..."
          echo '{
            "compilerOptions": {
              "target": "ES2020",
              "useDefineForClassFields": true,
              "lib": ["ES2020", "DOM", "DOM.Iterable"],
              "module": "ESNext",
              "skipLibCheck": true,
              "moduleResolution": "bundler",
              "allowImportingTsExtensions": true,
              "resolveJsonModule": true,
              "isolatedModules": true,
              "noEmit": true,
              "jsx": "react-jsx",
              "strict": true,
              "noUnusedLocals": true,
              "noUnusedParameters": true,
              "noFallthroughCasesInSwitch": true
            },
            "include": ["src"],
            "references": [{ "path": "./tsconfig.node.json" }]
          }' > tsconfig.json
          
          # Create tsconfig.node.json
          echo "Creating tsconfig.node.json..."
          echo '{
            "compilerOptions": {
              "composite": true,
              "skipLibCheck": true,
              "module": "ESNext",
              "moduleResolution": "bundler",
              "allowSyntheticDefaultImports": true
            },
            "include": ["vite.config.ts"]
          }' > tsconfig.node.json
          
          # Clean install
          echo "Cleaning environment..."
          rm -rf node_modules package-lock.json
          
          # Install dependencies
          echo "Installing dependencies..."
          npm install
          
          # Verify installation
          echo "Verifying installation..."
          npm list
          
          # Show binary files
          echo "Checking binary files..."
          ls -la node_modules/.bin || echo "No .bin directory found"
          
          # Display TypeScript version
          echo "TypeScript version:"
          npx tsc --version || echo "TypeScript not found"
      
      - name: Build
        run: |
          echo "Starting build process..."
          
          # Debug node_modules
          echo "Checking node_modules structure:"
          ls -la node_modules/.bin || echo "/.bin directory not found"
          echo "Checking typescript installation:"
          npm list typescript
          
          # First run TypeScript compilation
          echo "Running TypeScript compilation..."
          echo "TypeScript version:"
          npx --no-install typescript --version
          npx --no-install typescript --project tsconfig.json
          
          # Then run Vite build
          echo "Running Vite build..."
          echo "Vite version:"
          npx --no-install vite --version
          npx --no-install vite build
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 